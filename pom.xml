<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>it.agilelab.bigdata.spark</groupId>
    <artifactId>spark-solr</artifactId>
    <packaging>jar</packaging>
    <version>1.2.10</version>
    <name>spark-solr</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.7</java.version>
        <scala.version>2.11.11</scala.version>
        <spark.version>2.2.1</spark.version>
        <maven-deploy-plugin.version>2.8.1</maven-deploy-plugin.version>
    </properties>

    <profiles>
        <profile>
            <id>internal</id>
            <distributionManagement>
                <repository>
                    <id>nexus-release</id>
                    <name>Nexus Agile Repository</name>
                    <url>${env.NEXUS_URL}/repository/maven-releases</url>
                    <layout>default</layout>
                </repository>
                <snapshotRepository>
                    <id>nexus-snapshots</id>
                    <name>Nexus Agile Repository</name>
                    <url>${env.NEXUS_URL}/repository/maven-snapshots</url>
                </snapshotRepository>
            </distributionManagement>
        </profile>
        <profile>
            <id>public</id>
            <distributionManagement>
                <repository>
                    <id>bintray-agile-lab-dev-Spark-Solr</id>
                    <name>agile-lab-dev-Spark-Solr</name>
                    <url>https://api.bintray.com/maven/agile-lab-dev/Spark-Solr/spark-solr/;publish=1</url>
                </repository>
            </distributionManagement>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            <!-- TODO add back classifiers for crossverion builds using profiles -->
            <!-- plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <classifier>${env.classifier}</classifier>
                </configuration>
            </plugin -->
            <!-- This plugin is needed because otherwise the installed POM would have a non-resolved variable as project
                 version, breaking dependency resolution. See also MNG-2971 -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <!-- Replace the placeholders in the pom by their values (used by the install plugin below)-->
                    <execution>
                        <id>replace-pom-placeholder</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>modified-pom</finalName>
                            <descriptors>
                                <descriptor>src/assemble/replacePomPlaceholder.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- TODO add back classifiers for crossverion builds using profiles -->
            <!-- This plugin is needed because otherwise the installed POM would have a non-resolved variable as project
                 version, breaking dependency resolution. See also MNG-2971 -->
            <!--<plugin>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
                <executions>
                    &lt;!&ndash; Replaces the pom (with placeholders) in the repository with the pom without placeholders &ndash;&gt;
                    <execution>
                        <id>overwrite-pom</id>
                        <phase>install</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <pomFile>target/modified-pom-replacePomPlaceholder/modified-pom/pom.xml</pomFile>
                            <classifier>${env.classifier}</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
                <!-- TODO add back classifiers for crossverion builds using profiles -->
                <!-- TODO reenable when adding back classifier -->
                <!--executions>
                    <execution>
                        <id>default-deploy</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>custom-deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy-file</goal>
                        </goals>
                    </execution>
                </executions-->
                <!--configuration>
                    <repositoryId>nexus-release</repositoryId>
                    < !- file>${project.basedir}/target/${project.artifactId}-${project.version}-${env.classifier}.jar</file ->
                    <file>${project.basedir}/target/${project.artifactId}-${project.version}.jar</file>
                    <groupId>it.agilelab.bigdata.spark</groupId>
                    <artifactId>spark-solr</artifactId>
                    <version>${project.version}</version>
                    <packaging>jar</packaging>
                    <url>${env.NEXUS_URL}/repository/maven-releases</url>
                    <!- classifier>${env.classifier}</classifier ->
                </configuration -->
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.11</artifactId>
            <version>${spark.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.esotericsoftware.kryo</groupId>
            <artifactId>kryo</artifactId>
            <version>2.21</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.codahale.metrics</groupId>
            <artifactId>metrics-core</artifactId>
            <version>3.0.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming_2.11</artifactId>
            <version>${spark.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-mllib_2.11</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-solrj</artifactId>
            <version>4.10.3</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-core</artifactId>
            <version>4.10.3</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-test-framework</artifactId>
            <version>4.10.3</version>
            <type>jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.9.11</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-client</artifactId>
            <version>2.4.1</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <version>2.4.1</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.3.2</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.4.4</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.4.4</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <!-- TODO add back classifiers for crossverion builds using profiles -->
            <!-- TODO parametrize using profiles -->
            <version>2.11.11</version>
        </dependency>
    </dependencies>
</project>
