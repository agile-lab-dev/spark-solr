<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>it.agilelab.bigdata.spark</groupId>
    <artifactId>spark-solr</artifactId>
    <packaging>jar</packaging>
    <version>1.2.0</version>
    <name>spark-solr</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.7</java.version>
        <scala.version>2.11.11</scala.version>
        <spark.version>2.2.0</spark.version>
        <maven-deploy-plugin.version>2.8.1</maven-deploy-plugin.version>
    </properties>


    <distributionManagement>
        <repository>
            <id>nexus-release</id>
            <name>Nexus Agile Repository</name>
            <url>${env.NEXUS_URL}/repository/maven-releases</url>
            <layout>default</layout>
        </repository>
        <snapshotRepository>
            <id>nexus-snapshots</id>
            <name>Nexus Agile Repository</name>
            <url>${env.NEXUS_URL}/repository/maven-snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>scala</id>
            <name>Scala Tools</name>
            <url>http://scala-tools.org/repo-releases/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>scala</id>
            <name>Scala Tools</name>
            <url>http://scala-tools.org/repo-releases/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <profiles>
        <profile>
            <id>spark-1.6-scala-2.10</id>
            <properties>
                <scala.version>2.10</scala.version>
                <spark.version>1.6.3</spark.version>
                <env.classifier>spark-1.6-scala-2.10</env.classifier>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>spark-1.6-scala-2.11</id>
            <properties>
                <scala.version>2.11</scala.version>
                <spark.version>1.6.3</spark.version>
                <env.classifier>spark-1.6-scala-2.11</env.classifier>
            </properties>
        </profile>
        <profile>
            <id>spark-2.2-scala-2.11</id>
            <properties>
                <scala.version>2.11</scala.version>
                <spark.version>2.2.0</spark.version>
                <env.classifier>spark-2.2-scala-2.11</env.classifier>
            </properties>
        </profile>
        <profile>
            <id>spark-2.1-scala-2.11</id>
            <properties>
                <scala.version>2.11</scala.version>
                <spark.version>2.1.1</spark.version>
                <env.classifier>spark-2.1-scala-2.11</env.classifier>
            </properties>
        </profile>
        <profile>
            <id>spark-2.0-scala-2.11</id>
            <properties>
                <scala.version>2.11</scala.version>
                <spark.version>2.0.2</spark.version>
                <env.classifier>spark-2.0-scala-2.11</env.classifier>
            </properties>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <classifier>${env.classifier}</classifier>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <phase>deploy</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <finalName>${project.build.finalName}-shaded.jar</finalName>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <artifactSet>
                                <excludes>
                                    <exclude>org.apache.spark:spark-core_${scala.version}</exclude>
                                    <exclude>org.apache.spark:spark-streaming_${scala.version}</exclude>
                                    <exclude>org.apache.hadoop:*</exclude>
                                    <exclude>com.google.protobuf_spark:*</exclude>
                                    <exclude>com.google.guava:guava</exclude>
                                    <exclude>org.scala-lang:scala-library</exclude>
                                    <!--exclude>com.twitter:chill_${scala.version}</exclude>
                                    <exclude>com.twitter:chill-java</exclude-->
                                    <exclude>org.spark-project.akka:akka-remote_${scala.version}</exclude>
                                    <exclude>org.spark-project.akka:akka-slf4j_${scala.version}</exclude>
                                    <exclude>net.java.dev.jets3t:jets3t</exclude>
                                    <exclude>org.eclipse.jetty:*</exclude>
                                    <exclude>org.eclipse.jetty.orbit:*</exclude>
                                    <exclude>org.slf4j:*</exclude>
                                    <exclude>org.scala-lang:scala-library</exclude>
                                    <exclude>commons-httpclient:commons-httpclient</exclude>
                                    <exclude>org.apache.curator:*</exclude>
                                    <exclude>org.apache.commons:commons-lang3</exclude>
                                    <exclude>com.google.code.findbugs</exclude>
                                    <exclude>com.ning:compress-lzf</exclude>
                                    <exclude>org.xerial.snappy:snappy-java</exclude>
                                    <exclude>net.jpountz.lz4:lz4</exclude>
                                    <exclude>com.esotericsoftware.kryo:*</exclude>
                                    <exclude>log4j:log4j</exclude>
                                    <exclude>com.esotericsoftware.reflectasm:reflectasm</exclude>
                                    <exclude>com.esotericsoftware.minlog:minlog</exclude>
                                    <exclude>org.objenesis:objenesis</exclude>
                                    <exclude>commons-net:commons-net</exclude>
                                    <exclude>org.apache.james:*</exclude>
                                    <exclude>org.ow2.asm:asm-debug-all</exclude>
                                    <exclude>javax.xml.stream:stax-api</exclude>
                                    <exclude>javax.ws.rs:javax.ws.rs-api</exclude>
                                    <exclude>xml-apis:xml-apis</exclude>
                                    <exclude>org.ow2.asm:asm</exclude>
                                    <exclude>com.codahale.metrics:metrics-core</exclude>
                                    <exclude>com.sun.xml.bind:jaxb-impl</exclude>
                                    <exclude>com.sun.jersey:jersey-client</exclude>
                                    <exclude>org.mortbay.jetty:jetty-util</exclude>
                                    <exclude>javax.servlet:*</exclude>
                                </excludes>
                            </artifactSet>
                            <relocations>
                                <relocation>
                                    <pattern>org.apache.http</pattern>
                                    <shadedPattern>shaded.apache.http</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.codehaus.jackson</pattern>
                                    <shadedPattern>shaded.codehaus.jackson</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.objectweb.asm</pattern>
                                    <shadedPattern>shaded.objectweb.asm</shadedPattern>
                                </relocation>
                            </relocations>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- This plugin is needed because otherwise the installed POM would have a non-resolved variable as project
                 version, breaking dependency resolution. See also MNG-2971 -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <!-- Replace the placeholders in the pom by their values (used by the install plugin below)-->
                    <execution>
                        <id>replace-pom-placeholder</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>modified-pom</finalName>
                            <descriptors>
                                <descriptor>src/assemble/replacePomPlaceholder.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- This plugin is needed because otherwise the installed POM would have a non-resolved variable as project
                 version, breaking dependency resolution. See also MNG-2971 -->
            <!--<plugin>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
                <executions>
                    &lt;!&ndash; Replaces the pom (with placeholders) in the repository with the pom without placeholders &ndash;&gt;
                    <execution>
                        <id>overwrite-pom</id>
                        <phase>install</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <pomFile>target/modified-pom-replacePomPlaceholder/modified-pom/pom.xml</pomFile>
                            <classifier>${env.classifier}</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                    <classifier>${env.classifier}</classifier>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.5.1</version>
                <executions>
                    <execution>
                        <id>default-deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <serverId>nexus</serverId>
                    <nexusUrl>${env.NEXUS_URL}/nexus/</nexusUrl>
                    <skipStaging>true</skipStaging>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.version}</artifactId>
            <version>${spark.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.esotericsoftware.kryo</groupId>
            <artifactId>kryo</artifactId>
            <version>2.21</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.codahale.metrics</groupId>
            <artifactId>metrics-core</artifactId>
            <version>3.0.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming_${scala.version}</artifactId>
            <version>${spark.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-mllib_${scala.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <!--dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming-twitter_${scala.version}</artifactId>
            <version>${spark.version}</version>
        </dependency-->
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-solrj</artifactId>
            <version>4.10.3</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-core</artifactId>
            <version>4.10.3</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-test-framework</artifactId>
            <version>4.10.3</version>
            <type>jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.9.11</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-client</artifactId>
            <version>2.4.1</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <version>2.4.1</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.3.2</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.4.4</version>
            <!--version>2.2.3</version-->
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.4.4</version>
            <!--version>2.2.3</version-->
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>2.11.11</version><!-- TODO parametrizzare a seconda dei profili-->
        </dependency>
    </dependencies>
</project>
